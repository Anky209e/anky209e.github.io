<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://anky209e.github.io/</id><title>BloGsmith</title><subtitle>A minimal, responsive, and powerful notes personal taking static webapp for regular use. .</subtitle> <updated>2022-07-03T21:20:49+05:30</updated> <author> <name>Ankit Kumar</name> <uri>https://anky209e.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://anky209e.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://anky209e.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Ankit Kumar </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Secure Shell Key Pairs</title><link href="https://anky209e.github.io/posts/aws_ssh/" rel="alternate" type="text/html" title="Secure Shell Key Pairs" /><published>2022-07-03T13:10:00+05:30</published> <updated>2022-07-03T13:10:00+05:30</updated> <id>https://anky209e.github.io/posts/aws_ssh/</id> <content src="https://anky209e.github.io/posts/aws_ssh/" /> <author> <name>Ankit Kumar</name> </author> <category term="AWS" /> <category term="Cloud" /> <category term="Notes" /> <summary> Secure Shell Protocol(SSH) The industry-standard tool for safely encrypting remote login sessions is the Secure Shell (SSH) protocol. Without encryption, all commands and keystrokes you enter during a terminal session run over an insecure network will be easily readable by anyone with access to that network. When that “network” is the internet, that can add up to a lot of unfriendly eyes on ... </summary> </entry> <entry><title>Securing Your AWS Resources</title><link href="https://anky209e.github.io/posts/aws_iam/" rel="alternate" type="text/html" title="Securing Your AWS Resources" /><published>2022-07-03T13:00:00+05:30</published> <updated>2022-07-03T13:00:00+05:30</updated> <id>https://anky209e.github.io/posts/aws_iam/</id> <content src="https://anky209e.github.io/posts/aws_iam/" /> <author> <name>Ankit Kumar</name> </author> <category term="AWS" /> <category term="Cloud" /> <category term="Notes" /> <summary> AWS Identity and Access Management We’ll start with IAM, whose management dashboard connects you to all the administration tools you’ll need to manage the basics of account security. the Security Status section of that page provides a friendly reminder that there might be some issues requiring your attention. Those suggestions include protecting your account by locking down the root user (the... </summary> </entry> <entry><title>Shared Responsibility Model:AWS</title><link href="https://anky209e.github.io/posts/aws_responsiblity_model/" rel="alternate" type="text/html" title="Shared Responsibility Model:AWS" /><published>2022-06-15T13:25:00+05:30</published> <updated>2022-06-15T13:25:00+05:30</updated> <id>https://anky209e.github.io/posts/aws_responsiblity_model/</id> <content src="https://anky209e.github.io/posts/aws_responsiblity_model/" /> <author> <name>Ankit Kumar</name> </author> <category term="AWS" /> <category term="Cloud" /> <category term="Notes" /> <summary> What is AWS Shared Responsibility Model? Amazon distinguishes between the security and reliability of the cloud, which is its responsibility, and the security and reliability of what’s in the cloud, which is up to you, the customer AWS is also on the hook for patching, encrypting (where relevant), and maintaining the operating systems and virtualization software running its physical servers ... </summary> </entry> <entry><title>Edge Locations:AWS Global Infrastructure</title><link href="https://anky209e.github.io/posts/aws_edge/" rel="alternate" type="text/html" title="Edge Locations:AWS Global Infrastructure" /><published>2022-06-15T13:20:00+05:30</published> <updated>2022-06-15T13:20:00+05:30</updated> <id>https://anky209e.github.io/posts/aws_edge/</id> <content src="https://anky209e.github.io/posts/aws_edge/" /> <author> <name>Ankit Kumar</name> </author> <category term="AWS" /> <category term="Cloud" /> <category term="Notes" /> <summary> What is a edge location? The final major piece of the AWS infrastructure puzzle is its network of edge locations. An edge location is a site where AWS deploys physical server infrastructure to provide lowlatency user access to Amazon-based data That definition is correct, but it does sound suspiciously like the way you’d define any other AWS data center, doesn’t it? The important difference ... </summary> </entry> <entry><title>Availability Zones:AWS Global Infrastructure</title><link href="https://anky209e.github.io/posts/aws_az/" rel="alternate" type="text/html" title="Availability Zones:AWS Global Infrastructure" /><published>2022-06-15T12:50:00+05:30</published> <updated>2022-06-15T12:50:00+05:30</updated> <id>https://anky209e.github.io/posts/aws_az/</id> <content src="https://anky209e.github.io/posts/aws_az/" /> <author> <name>Ankit Kumar</name> </author> <category term="AWS" /> <category term="Cloud" /> <category term="Notes" /> <summary> Availability Zone Designations Understanding how Availability Zones work has immediate and practical importance. Before launching an EC2 instance, for example, you’ll need to specify a network subnet associated with an AZ. It’s the subnet/AZ combination that will be your instance’s host environment. Unsure about that subnet business? You’ll learn more in just a few moments Availability Zone... </summary> </entry> </feed>
